



  <%- include('partials/form-header') %>
  <div class="ui middle aligned center aligned grid">
    
    <div class="column">
  
      <form id="payment-form"   class="ui large  form">
    
        <div class="ui stacked segment">
              <h2 class="ui orange image header">
    
        <div class="content">
          Payment
        </div>
      </h2>
          <div class="field">
         
              <div id="card-element">
                
              </div>

          
              <div class="ui error message">
                <div class="header" id="card-errors"></div>
                </div>
          </div>
        
        <button id="button-text" class="ui fluid large orange submit button" type="submit">Pay</button>
      </div>
  
        <div class="ui error message"></div>
  
      </form>
  
     
    </div>
  </div>
  <script>
    // testing card 4000 0025 0000 3155

    // Set your publishable key: remember to change this to your live publishable key in production
// See your keys here: https://dashboard.stripe.com/account/apikeys
$('.message .close')
    .on('click', function() {
      $(this)
        .closest('.message')
        .transition('fade')
      ;
    })
  ;



  var stripe = Stripe('<%= public_key %>');

  // Set up Stripe.js and Elements to use in checkout form
var elements = stripe.elements();
var style = {
  base: {
    color: "#32325d",
  }
};

var card = elements.create("card", { style: style });
card.mount("#card-element");

card.on('change', ({error}) => {
  const displayError = document.getElementById('card-errors');
  if (error) {
    displayError.textContent = error.message;
  } else {
    displayError.textContent = '';
  }
});

var form = document.getElementById('payment-form');

form.addEventListener('submit', function(ev) {
  $('#payment-form').addClass("loading");
  ev.preventDefault();
  stripe.confirmCardPayment("<%= client_secret%>", {
    payment_method: {
      card: card,
      billing_details: {
        name: 'Jenny Rosen'
      }
    }
  }).then(function(result) {
    if (result.error) {
      // Show error to your customer (e.g., insufficient funds)
      console.log(result.error.message);
    } else {
      // The payment has been processed!
      if (result.paymentIntent.status === 'succeeded') {
        $('#payment-form').removeClass("loading");
        $('#button-text').html("Payment Complete");
        // Show a success message to your customer
        // There's a risk of the customer closing the window before callback
        // execution. Set up a webhook or plugin to listen for the
        // payment_intent.succeeded event that handles any business critical
        // post-payment actions.
      }
    }
  });
});
</script>

  </body>
  
  </html>

